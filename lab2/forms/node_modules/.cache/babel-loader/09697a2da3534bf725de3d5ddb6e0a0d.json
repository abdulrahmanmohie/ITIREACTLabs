{"ast":null,"code":"var _jsxFileName = \"F:\\\\ITI2021\\\\40React\\\\lab\\\\lab2\\\\forms\\\\src\\\\register\\\\register.js\",\n    _s = $RefreshSig$();\n\nimport './register.css';\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Register() {\n  _s();\n\n  const [registerFormData, setRegisterFormData] = useState({\n    registerName: '',\n    registerEmail: '',\n    registerUsername: '',\n    registerPass: '',\n    registerConfirmPass: ''\n  });\n  const [RegisterFormErrors, setRegisterFormErrors] = useState({\n    registerNameErr: null,\n    registerEmailErr: null,\n    registerUsernameErr: null,\n    registerPassErr: null,\n    registerConfirmPassErr: null\n  });\n  useEffect(() => {// console.log(loginFormData);\n  }, [registerFormData]);\n\n  const handleRegisterForm = e => {\n    const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n\n    if (e.target.name === 'registerEmail') {\n      setRegisterFormData({ ...registerFormData,\n        registerEmail: e.target.value\n      });\n      setRegisteFormErrors({ ...registerFormErrors,\n        registerEmailErr: e.target.value.length === 0 ? \"This field is required\" : regex.test(e.target.value) === false ? \"Enter valid email!\" : null\n      });\n    } else if (e.target.name === 'registerPass') {\n      setRegisterFormData({ ...registerFormData,\n        registerPass: e.target.value\n      });\n      setRegisterFormErrors({ ...registerFormErrors,\n        registerPassErr: e.target.value.length === 0 ? \"This field is required\" : e.target.value < 8 ? \"Min. length is 8 \" : null\n      });\n    }\n  };\n\n  const registerFormSubmit = e => {\n    e.preventDefault();\n    console.log(registerFormData);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: e => registerFormSubmit(e),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"registerEmail\",\n          className: \"form-label\",\n          children: \"Email\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          className: `form-control ${registerFormErrors.registerEmailErr ? \"border-danger\" : \"\"}`,\n          name: \"registerEmail\",\n          \"aria-describedby\": \"useremailHelp\",\n          value: registerFormData.registerEmail,\n          onChange: e => handleRegisterForm(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"useremailHelp\",\n          className: \"text-danger form-text\",\n          children: registerFormErrors.registerEmailErr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-3\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"registerPass\",\n          className: \"form-label\",\n          children: \"Password\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          className: \"form-control\",\n          name: \"pass\",\n          value: loginFormData.userPass,\n          \"aria-describedby\": \"passHelp\",\n          onChange: e => handleForm(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"ageHelp\",\n          className: \"text-danger form-text\",\n          children: loginFormErrors.userPassErr\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Register, \"QKoJtN5CoGEBGLzJD60xgzY7Ud4=\");\n\n_c = Register;\n\nvar _c;\n\n$RefreshReg$(_c, \"Register\");","map":{"version":3,"sources":["F:/ITI2021/40React/lab/lab2/forms/src/register/register.js"],"names":["useState","useEffect","Register","registerFormData","setRegisterFormData","registerName","registerEmail","registerUsername","registerPass","registerConfirmPass","RegisterFormErrors","setRegisterFormErrors","registerNameErr","registerEmailErr","registerUsernameErr","registerPassErr","registerConfirmPassErr","handleRegisterForm","e","regex","target","name","value","setRegisteFormErrors","registerFormErrors","length","test","registerFormSubmit","preventDefault","console","log","loginFormData","userPass","handleForm","loginFormErrors","userPassErr"],"mappings":"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","sourcesContent":["import './register.css'\r\nimport {useState,useEffect} from 'react'\r\n\r\nexport default function Register(){\r\n\r\n    const [registerFormData,setRegisterFormData] = useState({\r\n        registerName:'',\r\n        registerEmail:'',\r\n        registerUsername:'',\r\n        registerPass:'',\r\n        registerConfirmPass:''\r\n    })\r\n\r\n    const[RegisterFormErrors,setRegisterFormErrors] = useState({\r\n        registerNameErr:null,\r\n        registerEmailErr:null,\r\n        registerUsernameErr:null,\r\n        registerPassErr:null,\r\n        registerConfirmPassErr:null\r\n    })\r\n\r\n    useEffect(() => {\r\n        // console.log(loginFormData);\r\n      }, [registerFormData]);\r\n    \r\n\r\n\r\n    const handleRegisterForm = (e)=>{\r\n        const regex = /^(([^<>()[\\]\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\r\n        if(e.target.name === 'registerEmail'){\r\n            setRegisterFormData({\r\n                ...registerFormData,\r\n                registerEmail: e.target.value,\r\n              });\r\n              setRegisteFormErrors({\r\n                ...registerFormErrors,\r\n                registerEmailErr:\r\n                  e.target.value.length === 0\r\n                    ? \"This field is required\"\r\n                    : regex.test(e.target.value) === false\r\n                    ? \"Enter valid email!\"\r\n                    : null,\r\n              });\r\n        }else if(e.target.name === 'registerPass'){\r\n            setRegisterFormData({\r\n                ...registerFormData,\r\n                registerPass: e.target.value,\r\n              });\r\n              setRegisterFormErrors({\r\n                ...registerFormErrors,\r\n                registerPassErr:\r\n                  e.target.value.length === 0\r\n                    ? \"This field is required\"\r\n                    : e.target.value < 8\r\n                    ? \"Min. length is 8 \"\r\n                    : null,\r\n              });\r\n        }\r\n    }\r\n    const registerFormSubmit = (e) => {\r\n        e.preventDefault();\r\n        console.log(registerFormData);\r\n      };\r\n    return(\r\n        <div>\r\n      <h2>Login</h2>\r\n      <form onSubmit={(e) => registerFormSubmit(e)}>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"registerEmail\" className=\"form-label\">\r\n            Email\r\n          </label>\r\n          <input\r\n            type=\"email\"\r\n            className={`form-control ${\r\n              registerFormErrors.registerEmailErr ? \"border-danger\" : \"\"\r\n            }`}\r\n            name=\"registerEmail\"\r\n            aria-describedby=\"useremailHelp\"\r\n            value={registerFormData.registerEmail}\r\n            onChange={(e) => handleRegisterForm(e)}\r\n          />\r\n          <div id=\"useremailHelp\" className=\"text-danger form-text\">\r\n            {registerFormErrors.registerEmailErr}\r\n          </div>\r\n        </div>\r\n        <div className=\"mb-3\">\r\n          <label htmlFor=\"registerPass\" className=\"form-label\">\r\n            Password\r\n          </label>\r\n          <input\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"pass\"\r\n            value={loginFormData.userPass}\r\n            aria-describedby=\"passHelp\"\r\n            onChange={(e) => handleForm(e)}\r\n          />\r\n          <div id=\"ageHelp\" className=\"text-danger form-text\">\r\n            {loginFormErrors.userPassErr}\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Submit\r\n        </button>\r\n      </form>\r\n    </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}